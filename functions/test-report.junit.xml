<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="128" failures="0" errors="0" time="0.9127306">
    <testsuite name="src/test/http.test.ts" timestamp="2025-07-25T23:17:59.221Z" hostname="DESKTOP-AACMAQ0" tests="10" failures="0" errors="0" skipped="0" time="0.3659810001">
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; sendHttpRequestTo Function &gt; should successfully fetch and parse HTML" time="0.1716783">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; sendHttpRequestTo Function &gt; should return a Queriable object that can be queried" time="0.0234435">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; sendHttpRequestTo Function &gt; should handle HTTP errors gracefully" time="0.0036883">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; sendHttpRequestTo Function &gt; should handle invalid URLs" time="0.0004151">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; sendHttpRequestTo Function &gt; should handle non-existent domains" time="0.0416001">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; Integration with Queriable &gt; should extract listings from fetched HTML" time="0.0272006999">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; Integration with Queriable &gt; should extract table data from fetched HTML" time="0.0287055">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; Integration with Queriable &gt; should extract article information from fetched HTML" time="0.0172707">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; Integration with Queriable &gt; should extract navigation links from fetched HTML" time="0.0257424999">
        </testcase>
        <testcase classname="src/test/http.test.ts" name="HTTP Functionality with Test HTML Page &gt; Real-world Scenarios &gt; should handle comprehensive data extraction scenario" time="0.0202121999">
        </testcase>
    </testsuite>
    <testsuite name="src/test/integration.test.ts" timestamp="2025-07-25T23:17:59.224Z" hostname="DESKTOP-AACMAQ0" tests="15" failures="0" errors="0" skipped="0" time="0.3715493001">
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should validate a valid task" time="0.0013803999">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should reject task with invalid URL" time="0.0003808">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should reject task with missing URL" time="0.00036">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should reject task with no queries" time="0.0002561001">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should reject task with non-array queries" time="0.0001783">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Task Validation &gt; should reject undefined task" time="0.0001571001">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Simple Scenarios &gt; should extract page title successfully" time="0.1741870999">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Simple Scenarios &gt; should extract listings successfully" time="0.0293362">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Simple Scenarios &gt; should extract table data successfully" time="0.0184418">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Complex Scenarios &gt; should handle multiple queries in a single task" time="0.0247934999">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Complex Scenarios &gt; should handle different target types in a single task" time="0.028822">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Complete Workflow - Complex Scenarios &gt; should handle queries that return no results" time="0.0245728">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Real-world Use Cases &gt; should simulate e-commerce product listing extraction" time="0.0209099001">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Real-world Use Cases &gt; should simulate data table extraction for analytics" time="0.0191942">
        </testcase>
        <testcase classname="src/test/integration.test.ts" name="Integration Tests - Complete Workflow with Test HTML Page &gt; Real-world Use Cases &gt; should simulate content aggregation for news/articles" time="0.022627">
        </testcase>
    </testsuite>
    <testsuite name="src/test/logger.test.ts" timestamp="2025-07-25T23:17:59.226Z" hostname="DESKTOP-AACMAQ0" tests="8" failures="0" errors="0" skipped="0" time="0.0085224999">
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; debug should call funcsLogger.debug when level is DEBUG" time="0.0033747">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; debug should not call funcsLogger.debug when level is INFO" time="0.0005712">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; info should call funcsLogger.info when level is INFO or lower" time="0.0015615">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; warn should call funcsLogger.warn when level is WARN or lower" time="0.0004060999">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; error should call funcsLogger.error when level is ERROR or lower" time="0.0002392">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; log level methods &gt; no logging should occur when log level is SILENT" time="0.0002962">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; prefix &gt; should prefix logs with the provided prefix" time="0.0003605">
        </testcase>
        <testcase classname="src/test/logger.test.ts" name="Logger &gt; prefix &gt; should not add a prefix if none is provided" time="0.0002196">
        </testcase>
    </testsuite>
    <testsuite name="src/test/queriable.test.ts" timestamp="2025-07-25T23:17:59.228Z" hostname="DESKTOP-AACMAQ0" tests="21" failures="0" errors="0" skipped="0" time="0.1435189999">
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by ID &gt; should find elements by ID" time="0.0034817001">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by ID &gt; should find info section by ID" time="0.0004688001">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by ID &gt; should find data section by ID" time="0.0005895001">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by ID &gt; should find articles section by ID" time="0.0003153">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Class &gt; should find elements by class name" time="0.0021281999">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Tag &gt; should find all h2 elements" time="0.0015857999">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Tag &gt; should find all h3 elements (articles)" time="0.0008586">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Tag &gt; should find all list items" time="0.0011748999">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by CSS Selector &gt; should find table data using CSS selector" time="0.0018660001">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by CSS Selector &gt; should find specific table cells" time="0.0019223">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by CSS Selector &gt; should find navigation links" time="0.0010539">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Attribute &gt; should find elements with specific attributes" time="0.0013238">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Attribute &gt; should find links with href attribute" time="0.0043243001">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Query by Attribute &gt; should find images with src attribute" time="0.0011058">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Different Target Types &gt; should extract HTML content" time="0.0014361999">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Different Target Types &gt; should extract inner HTML content" time="0.0007531">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Different Target Types &gt; should extract text content" time="0.0002296">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Multi-Query Functionality &gt; should handle multiple queries at once" time="0.002939">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Edge Cases and Error Handling &gt; should handle queries for non-existent elements" time="0.0002384">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Edge Cases and Error Handling &gt; should handle queries for non-existent classes" time="0.0004561">
        </testcase>
        <testcase classname="src/test/queriable.test.ts" name="Queriable with Test HTML Page &gt; Edge Cases and Error Handling &gt; should handle complex CSS selectors" time="0.0009069999">
        </testcase>
    </testsuite>
    <testsuite name="src/test/validation.test.ts" timestamp="2025-07-25T23:17:59.232Z" hostname="DESKTOP-AACMAQ0" tests="74" failures="0" errors="0" skipped="0" time="0.0231588">
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Null/Undefined/Empty Tasks &gt; should reject null task" time="0.0015519999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Null/Undefined/Empty Tasks &gt; should reject undefined task" time="0.0004127001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Null/Undefined/Empty Tasks &gt; should reject empty object task" time="0.0002854999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Missing Required Fields &gt; should reject task missing URL field" time="0.0003483001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Missing Required Fields &gt; should reject task missing queries field" time="0.0002146001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Missing Required Fields &gt; should reject task missing both URL and queries" time="0.0001641999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with non-string URL" time="0.0001694">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with boolean URL" time="0.0001378">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with object URL" time="0.000479">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with non-array queries" time="0.0002602">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with object queries" time="0.0001668">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid Field Types &gt; should reject task with null queries" time="0.0002539001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid URLs &gt; should reject task with empty string URL" time="0.0003051001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid URLs &gt; should reject task with whitespace-only URL" time="0.0005996001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid URLs &gt; should reject task with invalid URL format" time="0.0002666999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid URLs &gt; should reject task with malformed URL" time="0.0001882">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Invalid URLs &gt; should reject task with URL containing only protocol" time="0.000161">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Empty Queries Array &gt; should reject task with empty queries array" time="0.0001214">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with HTTP URL" time="0.0002219">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with HTTPS URL" time="0.0001269001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with URL containing port" time="0.0001298">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with URL containing path" time="0.0001212">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with URL containing query parameters" time="0.0001304001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with URL containing fragment" time="0.0001341">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Tasks with Valid URLs but Edge Cases &gt; should accept task with localhost URL" time="0.0009511001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Fully Valid Tasks &gt; should accept minimal valid task" time="0.0001531">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Fully Valid Tasks &gt; should accept task with multiple queries" time="0.0001358">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Task Validation - From Empty to Valid &gt; Fully Valid Tasks &gt; should accept task with complex queries" time="0.0001575">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject null query" time="0.0008167">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject undefined query" time="0.0002993">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject empty object query" time="0.0002101001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject non-object query" time="0.0001714">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject number query" time="0.0001826">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Null/Undefined/Empty Queries &gt; should reject boolean query" time="0.0001692001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Fields &gt; should reject query missing id" time="0.0002417001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Fields &gt; should reject query missing type" time="0.0002452999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Fields &gt; should reject query missing value" time="0.0002679">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Fields &gt; should reject query missing target" time="0.0005153">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with non-string id" time="0.0002961">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with null id" time="0.0004398">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with empty string id" time="0.0002329999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with whitespace-only id" time="0.0002098">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with invalid type" time="0.0002832">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with non-string type" time="0.0002022001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with non-string value" time="0.000191">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with null value" time="0.0002053">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with empty string value" time="0.0001714001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with invalid target" time="0.0001835999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Invalid Field Types &gt; should reject query with non-string target" time="0.0001854">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Attribute Field &gt; should reject ATTRIBUTE target query without attr field" time="0.0002493">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Attribute Field &gt; should reject ATTRIBUTE target query with empty attr field" time="0.0002130001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Attribute Field &gt; should reject ATTRIBUTE target query with null attr field" time="0.0001967">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Queries with Missing Required Attribute Field &gt; should reject ATTRIBUTE target query with non-string attr field" time="0.0002514">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Special Query Type Validation &gt; should reject XPATH query type (not supported)" time="0.0003098">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Query Type &gt; should accept ID query with valid data" time="0.0002837001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Query Type &gt; should accept CLASS query with valid data" time="0.0001826">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Query Type &gt; should accept TAG query with valid data" time="0.0001885">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Query Type &gt; should accept ATTRIBUTE query with valid data" time="0.0001839">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Query Type &gt; should accept SELECTOR query with valid data" time="0.0001756999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Target Type &gt; should accept TEXT target" time="0.0001911">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Target Type &gt; should accept HTML target" time="0.0002774">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Target Type &gt; should accept INNER_HTML target" time="0.000211">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Edge Cases for Each Target Type &gt; should accept ATTRIBUTE target with attr field" time="0.0002416">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Complex Valid Queries &gt; should accept query with complex CSS selector" time="0.0003017">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Complex Valid Queries &gt; should accept query with attribute extraction" time="0.0002119999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Complex Valid Queries &gt; should accept query with pseudo-selectors" time="0.0001887">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Complex Valid Queries &gt; should accept query with attribute selectors" time="0.0001782999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Complex Valid Queries &gt; should accept query with special characters in CSS selector" time="0.0001949999">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Query Validation - From Invalid to Valid &gt; Warnings for Non-Attribute Targets with Attr Field &gt; should accept but warn when non-ATTRIBUTE target has attr field" time="0.0004641">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Integration - Task with Invalid Queries &gt; should accept task with valid queries array" time="0.0003187">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Integration - Task with Invalid Queries &gt; should accept task with single query" time="0.0006373">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Integration - Task with Invalid Queries &gt; should accept task with attribute extraction query" time="0.0001573">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Integration - Task with Invalid Queries &gt; should accept task with mixed query types" time="0.0001491001">
        </testcase>
        <testcase classname="src/test/validation.test.ts" name="Validation Tests - Complete Coverage &gt; Integration - Task with Invalid Queries &gt; should accept task with all supported target types" time="0.0001926">
        </testcase>
    </testsuite>
</testsuites>
